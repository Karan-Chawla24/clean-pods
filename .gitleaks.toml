# GitLeaks Configuration
# This configuration contains custom patterns for detecting secrets specific to this project.

# Custom rules for this project
[[rules]]
id = "razorpay-key"
description = "Razorpay API Key"
regex = '''rzp_(test|live)_[A-Za-z0-9]{14}'''
keywords = [
    "rzp_test",
    "rzp_live",
    "razorpay"
]

[[rules]]
id = "clerk-secret"
description = "Clerk Secret Key"
regex = '''sk_(test|live)_[A-Za-z0-9]{48}'''
keywords = [
    "sk_test",
    "sk_live",
    "clerk"
]

[[rules]]
id = "clerk-publishable"
description = "Clerk Publishable Key"
regex = '''pk_(test|live)_[A-Za-z0-9]{48}'''
keywords = [
    "pk_test",
    "pk_live",
    "clerk"
]

[[rules]]
id = "upstash-redis-url"
description = "Upstash Redis URL"
regex = '''redis://[^\s@]+@[^\s]+\.upstash\.io:[0-9]+'''
keywords = [
    "upstash",
    "redis://"
]

[[rules]]
id = "upstash-redis-token"
description = "Upstash Redis Token"
regex = '''A[A-Za-z0-9]{39}'''
keywords = [
    "upstash",
    "redis",
    "token"
]

[[rules]]
id = "vercel-token"
description = "Vercel Token"
regex = '''[A-Za-z0-9]{24}'''
keywords = [
    "vercel",
    "token"
]

[[rules]]
id = "slack-webhook"
description = "Slack Webhook URL"
regex = '''https://hooks\.slack\.com/services/[A-Z0-9]{9}/[A-Z0-9]{11}/[A-Za-z0-9]{24}'''
keywords = [
    "slack",
    "webhook",
    "hooks.slack.com"
]

[[rules]]
id = "database-url"
description = "Database Connection URL"
regex = '''(postgresql|mysql|mongodb)://[^\s]+:[^\s]+@[^\s]+'''
keywords = [
    "postgresql://",
    "mysql://",
    "mongodb://",
    "DATABASE_URL"
]

# Allowlist - Files and patterns to ignore
[allowlist]
paths = [
    ".env.example",
    ".env.vercel.example",
    ".env.local",
    "README.md",
    "DEPLOYMENT.md",
    "SECURITY.md",
    "PRODUCTION_DEPLOYMENT_CHECKLIST.md",
    "VERCEL_TROUBLESHOOTING.md",
    "docs/",
    "app/lib/",
    "package-lock.json",
    "yarn.lock",
    "pnpm-lock.yaml",
    ".gitleaks.toml",
    ".github/workflows/",
    "sbom.json",
    "tsconfig.tsbuildinfo",
    ".next/"
]

regexes = [
    # Ignore example/dummy values
    '''(example|dummy|test|placeholder|your_|YOUR_|<|>)''',
    # Ignore common false positives
    '''(localhost|127\.0\.0\.1|0\.0\.0\.0)''',
    # Ignore base64 encoded images
    '''data:image/[^;]+;base64,''',
    # Ignore common test patterns
    '''(test_|TEST_|mock_|MOCK_)''',
    # Ignore documentation patterns
    '''(\$\{|\{\{|\[\[|<%)''',
    # Ignore TypeScript/JavaScript comments
    '''(//|/\*|\*/)''',
    # Ignore package.json scripts and dependencies
    '''"(scripts|dependencies|devDependencies)"''',
    # Ignore Next.js build artifacts
    '''\.next/''',
    # Ignore Prisma generated files
    '''prisma/migrations/''',
    # Ignore markdown files
    '''\.md$''',
    # Ignore TypeScript function names and camelCase identifiers
    '''(function|async function|export function|const|let|var)\s+[a-zA-Z][a-zA-Z0-9]*''',
    # Ignore common TypeScript/JavaScript patterns
    '''(validate|create|get|set|update|delete|handle|process)[A-Z][a-zA-Z0-9]*''',
    # Ignore import/export statements
    '''(import|export)\s+.*from''',
    # Ignore username/password placeholders
    '''(username|password|host|port|dbname)'''
]

stopwords = [
    "example",
    "test",
    "dummy",
    "placeholder",
    "sample",
    "mock",
    "fake",
    "demo",
    "localhost",
    "127.0.0.1",
    "0.0.0.0",
    "your_key_here",
    "your_secret_here",
    "replace_with_actual",
    "TODO",
    "FIXME",
    "XXX"
]

# Global configuration
[global]
# Scan all files by default
scanUncommittedChanges = true

# Performance settings
maxTargetMegaBytes = 100

# Output settings
verbose = false
redact = true

# Additional file extensions to scan
[extend.groups.secrets]
patterns = [
    "**/*.ts",
    "**/*.tsx",
    "**/*.js",
    "**/*.jsx",
    "**/*.json",
    "**/*.env*",
    "**/*.yml",
    "**/*.yaml",
    "**/*.toml",
    "**/*.ini",
    "**/*.conf",
    "**/*.config"
]