generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  firstName     String?
  lastName      String?
  phone         String?
  address       String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  orders        Order[]
  sessions      Session[]

  @@map("users")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

model Order {
  id              String      @id @default(cuid())
  razorpayOrderId String?     @unique
  paymentId       String
  total           Float
  orderDate       DateTime    @default(now())
  userId          String?     @map("user_id")
  customerName    String      @map("customer_name")
  customerEmail   String      @map("customer_email")
  customerPhone   String      @map("customer_phone")
  address         String
  items           OrderItem[]
  user            User?       @relation(fields: [userId], references: [id])

  @@map("orders")
}

model OrderItem {
  id       String @id @default(cuid())
  orderId  String
  name     String
  quantity Int
  price    Float
  order    Order  @relation(fields: [orderId], references: [id])
}
